{"ast":null,"code":"var _jsxFileName = \"/Users/isabel/Documents/bnta_work/week_09/day_3/bakery_lab/src/cake/Cake.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cake = _ref => {\n  let {\n    cake\n  } = _ref;\n  // add the properties in a simple way referring to day2 lab\n  // add an unordered list with the properties of the cake in them referring to day1 lab\n\n  // const returnIngredientsAsList = () =>{\n  //   ingredients\n  // }        \n\n  const ingredientListItems = cake.ingredients.map(ingredient => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: ingredient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: cake.cakeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"name: \", cake.cakeName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"ingredients: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingredientListItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"price: \", cake.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"rating: \", cake.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = Cake;\nexport default Cake;\nvar _c;\n$RefreshReg$(_c, \"Cake\");","map":{"version":3,"names":["Cake","_ref","cake","ingredientListItems","ingredients","map","ingredient","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","cakeName","price","rating","_c","$RefreshReg$"],"sources":["/Users/isabel/Documents/bnta_work/week_09/day_3/bakery_lab/src/cake/Cake.js"],"sourcesContent":["const Cake = ({cake}) => {\n        // add the properties in a simple way referring to day2 lab\n        // add an unordered list with the properties of the cake in them referring to day1 lab\n\n// const returnIngredientsAsList = () =>{\n//   ingredients\n// }        \n\nconst ingredientListItems = cake.ingredients.map((ingredient)=>{\n  return <li>{ingredient}</li>\n})\n\n\n  return (\n    <>\n        <h2>{cake.cakeName}</h2>\n        <p>name: {cake.cakeName}</p>\n        <p>ingredients: </p>\n        <ul>{ingredientListItems}</ul>\n        <p>price: {cake.price}</p>\n        <p>rating: {cake.rating}</p>\n\n\n    </>\n  )\n}\n\nexport default Cake;"],"mappings":";;;AAAA,MAAMA,IAAI,GAAGC,IAAA,IAAY;EAAA,IAAX;IAACC;EAAI,CAAC,GAAAD,IAAA;EACZ;EACA;;EAER;EACA;EACA;;EAEA,MAAME,mBAAmB,GAAGD,IAAI,CAACE,WAAW,CAACC,GAAG,CAAEC,UAAU,IAAG;IAC7D,oBAAOC,OAAA;MAAAC,QAAA,EAAKF;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B,CAAC,CAAC;EAGA,oBACEL,OAAA,CAAAM,SAAA;IAAAL,QAAA,gBACID,OAAA;MAAAC,QAAA,EAAKN,IAAI,CAACY;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBL,OAAA;MAAAC,QAAA,GAAG,QAAM,EAACN,IAAI,CAACY,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BL,OAAA;MAAAC,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpBL,OAAA;MAAAC,QAAA,EAAKL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9BL,OAAA;MAAAC,QAAA,GAAG,SAAO,EAACN,IAAI,CAACa,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BL,OAAA;MAAAC,QAAA,GAAG,UAAQ,EAACN,IAAI,CAACc,MAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAG9B,CAAC;AAEP,CAAC;AAAAK,EAAA,GAzBKjB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}